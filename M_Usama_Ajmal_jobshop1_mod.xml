<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.

// sync on chanels

chan get_hammer, put_hammer, get_mallet, put_mallet;

</declaration>
	<template>
		<name x="5" y="5">Jobber</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-195" y="93">
			<name x="-205" y="59">work_hard</name>
		</location>
		<location id="id1" x="-85" y="34">
			<name x="-85" y="0">work_avg_hammer</name>
		</location>
		<location id="id2" x="-85" y="-68">
			<name x="-85" y="-102">work_avg_mallet</name>
		</location>
		<location id="id3" x="-204" y="-170">
			<name x="-214" y="-204">work_easy</name>
		</location>
		<location id="id4" x="-374" y="93">
			<name x="-384" y="59">hard</name>
		</location>
		<location id="id5" x="-374" y="-34">
			<name x="-384" y="-68">avg</name>
		</location>
		<location id="id6" x="-374" y="-161">
			<name x="-384" y="-195">easy</name>
		</location>
		<location id="id7" x="-501" y="-34">
			<name x="-484" y="-59">begin</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id1"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-501" y="212">put_hammer!</label>
			<nail x="-85" y="229"/>
			<nail x="-527" y="229"/>
			<nail x="-527" y="-8"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-76" y="-212">put_mallet!</label>
			<nail x="-85" y="-289"/>
			<nail x="-544" y="-289"/>
			<nail x="-544" y="-76"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id7"/>
			<nail x="-204" y="-229"/>
			<nail x="-493" y="-229"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-340" y="153">put_hammer!</label>
			<nail x="-195" y="153"/>
			<nail x="-493" y="153"/>
			<nail x="-501" y="-25"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-340" y="93">get_hammer!</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id3"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-263" y="8">get_hammer!</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-255" y="-85">get_mallet!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
		</transition>
	</template>
	<template>
		<name>Hammer</name>
		<location id="id8" x="-705" y="-263">
			<name x="-715" y="-297">taken</name>
		</location>
		<location id="id9" x="-918" y="-263">
			<name x="-928" y="-297">free</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-850" y="-348">put_hammer?</label>
			<nail x="-807" y="-323"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-858" y="-195">get_hammer?</label>
			<nail x="-807" y="-204"/>
		</transition>
	</template>
	<template>
		<name>Mallet</name>
		<location id="id10" x="170" y="51">
			<name x="162" y="17">taken</name>
		</location>
		<location id="id11" x="26" y="60">
			<name x="17" y="26">free</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="synchronisation" x="60" y="-8">put_mallet?</label>
			<nail x="94" y="17"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="60" y="94">get_mallet?</label>
			<nail x="94" y="94"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
Jobber1 = Jobber();
Jobber2 = Jobber();
//2 other jobbers are added
Jobber3 = Jobber(); 
Jobber4 = Jobber();
Jobber5 = Jobber();
// List one or more processes to be composed into a system.
system Jobber1, Jobber2, Jobber3, Jobber4, Jobber5, Hammer, Mallet;
    </system>
	<queries>
		<query>
			<formula>A[] not (Jobber1.work_hard &amp;&amp; Jobber2.work_hard)
			</formula>
			<comment>MutEx: Never (Not in any of the future states) Jobber1 and Jobber 2 both will work_hard.
			</comment>
		</query>
		<query>
			<formula>A[] Hammer.taken == (Jobber1.work_avg_hammer || Jobber2.work_avg_hammer || Jobber1.work_hard || Jobber2.work_hard)
			</formula>
			<comment>Whenever Hammer is taken, either Jobber1 is work_avg_hammer or Jobber2 is work_avg_hammer or Jobber1 is work_hard or Jobber2 is work_hard.
			</comment>
		</query>
		<query>
			<formula>A[] Mallet.taken == (Jobber1.work_avg_mallet || Jobber2.work_avg_mallet)
			</formula>
			<comment>Whenever mallet is taken, either Jobber1 is work_avg_mallet or Jobber2 is work_avg_mallet.
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Jobber1.work_hard &amp;&amp; Jobber2.work_hard
			</formula>
			<comment>Does there exists, in future, that Jobber1 works hard and Jobber2 works hard too?
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Jobber1.easy &amp;&amp; Jobber2.hard
			</formula>
			<comment>Does there exists, in future, that Jobber1 works easy and Jobber2 works hard ?
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; deadlock
			</formula>
			<comment>Does there exist any deadlock?
			</comment>
		</query>
		<query>
			<formula>A[] not deadlock
			</formula>
			<comment>We are checking the possible deadlock here.
			</comment>
		</query>
		<query>
			<formula>E&lt;&gt; Jobber4.work_hard &amp;&amp; (Jobber5.easy || Jobber3.easy)
			</formula>
			<comment>There exist a future state where jobber4 will do hard job and jobber5 or jobber3 will perform easy job
			</comment>
		</query>
		<query>
			<formula>A[] Jobber1.work_hard &amp;&amp; Jobber2.work_hard &amp;&amp; Jobber3.work_hard
			</formula>
			<comment>For all future states, jobber1, jobber2 and jobber3 will perform hard job.
			</comment>
		</query>
	</queries>
</nta>
